// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Closed extends ethereum.Event {
  get params(): Closed__Params {
    return new Closed__Params(this);
  }
}

export class Closed__Params {
  _event: Closed;

  constructor(event: Closed) {
    this._event = event;
  }

  get fundAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get subscriber(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subIdx(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Executed extends ethereum.Event {
  get params(): Executed__Params {
    return new Executed__Params(this);
  }
}

export class Executed__Params {
  _event: Executed;

  constructor(event: Executed) {
    this._event = event;
  }

  get action(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class PositionCreated extends ethereum.Event {
  get params(): PositionCreated__Params {
    return new PositionCreated__Params(this);
  }
}

export class PositionCreated__Params {
  _event: PositionCreated;

  constructor(event: PositionCreated) {
    this._event = event;
  }

  get positionHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get precursorAction(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get nextActions(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class PositionsClosed extends ethereum.Event {
  get params(): PositionsClosed__Params {
    return new PositionsClosed__Params(this);
  }
}

export class PositionsClosed__Params {
  _event: PositionsClosed;

  constructor(event: PositionsClosed) {
    this._event = event;
  }

  get closingAction(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get positionHashesClosed(): Array<Bytes> {
    return this._event.parameters[1].value.toBytesArray();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get subscriber(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subIdx(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Fund__createRuleInputTriggersStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get triggerType(): i32 {
    return this[1].toI32();
  }

  get createTimeParams(): Bytes {
    return this[2].toBytes();
  }
}

export class Fund__createRuleInputActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<Fund__createRuleInputActionsInputTokensStruct> {
    return this[2].toTupleArray<
      Fund__createRuleInputActionsInputTokensStruct
    >();
  }

  get outputTokens(): Array<Fund__createRuleInputActionsOutputTokensStruct> {
    return this[3].toTupleArray<
      Fund__createRuleInputActionsOutputTokensStruct
    >();
  }
}

export class Fund__createRuleInputActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__createRuleInputActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__createRuleToClosePositionInputActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    Fund__createRuleToClosePositionInputActionInputTokensStruct
  > {
    return this[2].toTupleArray<
      Fund__createRuleToClosePositionInputActionInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    Fund__createRuleToClosePositionInputActionOutputTokensStruct
  > {
    return this[3].toTupleArray<
      Fund__createRuleToClosePositionInputActionOutputTokensStruct
    >();
  }
}

export class Fund__createRuleToClosePositionInputActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__createRuleToClosePositionInputActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__getInputTokensResultValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__getOutputTokensResultValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionResultValue0Struct extends ethereum.Tuple {
  get tokenOutputs(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get position(): Fund__takeActionResultValue0PositionStruct {
    return changetype<Fund__takeActionResultValue0PositionStruct>(
      this[1].toTuple()
    );
  }
}

export class Fund__takeActionResultValue0PositionStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get actionConstraints(): Array<
    Fund__takeActionResultValue0PositionActionConstraintsStruct
  > {
    return this[1].toTupleArray<
      Fund__takeActionResultValue0PositionActionConstraintsStruct
    >();
  }

  get nextActions(): Array<
    Fund__takeActionResultValue0PositionNextActionsStruct
  > {
    return this[2].toTupleArray<
      Fund__takeActionResultValue0PositionNextActionsStruct
    >();
  }
}

export class Fund__takeActionResultValue0PositionActionConstraintsStruct extends ethereum.Tuple {
  get expiry(): BigInt {
    return this[0].toBigInt();
  }

  get activation(): BigInt {
    return this[1].toBigInt();
  }
}

export class Fund__takeActionResultValue0PositionNextActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    Fund__takeActionResultValue0PositionNextActionsInputTokensStruct
  > {
    return this[2].toTupleArray<
      Fund__takeActionResultValue0PositionNextActionsInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    Fund__takeActionResultValue0PositionNextActionsOutputTokensStruct
  > {
    return this[3].toTupleArray<
      Fund__takeActionResultValue0PositionNextActionsOutputTokensStruct
    >();
  }
}

export class Fund__takeActionResultValue0PositionNextActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionResultValue0PositionNextActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionInputActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<Fund__takeActionInputActionInputTokensStruct> {
    return this[2].toTupleArray<Fund__takeActionInputActionInputTokensStruct>();
  }

  get outputTokens(): Array<Fund__takeActionInputActionOutputTokensStruct> {
    return this[3].toTupleArray<
      Fund__takeActionInputActionOutputTokensStruct
    >();
  }
}

export class Fund__takeActionInputActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionInputActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionInputRuntimeParamsStruct extends ethereum.Tuple {
  get triggerReturnArr(): Array<
    Fund__takeActionInputRuntimeParamsTriggerReturnArrStruct
  > {
    return this[0].toTupleArray<
      Fund__takeActionInputRuntimeParamsTriggerReturnArrStruct
    >();
  }

  get collaterals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Fund__takeActionInputRuntimeParamsTriggerReturnArrStruct extends ethereum.Tuple {
  get triggerType(): i32 {
    return this[0].toI32();
  }

  get runtimeData(): Bytes {
    return this[1].toBytes();
  }
}

export class Fund__takeActionToClosePositionResultRespStruct extends ethereum.Tuple {
  get tokenOutputs(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get position(): Fund__takeActionToClosePositionResultRespPositionStruct {
    return changetype<Fund__takeActionToClosePositionResultRespPositionStruct>(
      this[1].toTuple()
    );
  }
}

export class Fund__takeActionToClosePositionResultRespPositionStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get actionConstraints(): Array<
    Fund__takeActionToClosePositionResultRespPositionActionConstraintsStruct
  > {
    return this[1].toTupleArray<
      Fund__takeActionToClosePositionResultRespPositionActionConstraintsStruct
    >();
  }

  get nextActions(): Array<
    Fund__takeActionToClosePositionResultRespPositionNextActionsStruct
  > {
    return this[2].toTupleArray<
      Fund__takeActionToClosePositionResultRespPositionNextActionsStruct
    >();
  }
}

export class Fund__takeActionToClosePositionResultRespPositionActionConstraintsStruct extends ethereum.Tuple {
  get expiry(): BigInt {
    return this[0].toBigInt();
  }

  get activation(): BigInt {
    return this[1].toBigInt();
  }
}

export class Fund__takeActionToClosePositionResultRespPositionNextActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    Fund__takeActionToClosePositionResultRespPositionNextActionsInputTokensStruct
  > {
    return this[2].toTupleArray<
      Fund__takeActionToClosePositionResultRespPositionNextActionsInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    Fund__takeActionToClosePositionResultRespPositionNextActionsOutputTokensStruct
  > {
    return this[3].toTupleArray<
      Fund__takeActionToClosePositionResultRespPositionNextActionsOutputTokensStruct
    >();
  }
}

export class Fund__takeActionToClosePositionResultRespPositionNextActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionToClosePositionResultRespPositionNextActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionToClosePositionInputActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    Fund__takeActionToClosePositionInputActionInputTokensStruct
  > {
    return this[2].toTupleArray<
      Fund__takeActionToClosePositionInputActionInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    Fund__takeActionToClosePositionInputActionOutputTokensStruct
  > {
    return this[3].toTupleArray<
      Fund__takeActionToClosePositionInputActionOutputTokensStruct
    >();
  }
}

export class Fund__takeActionToClosePositionInputActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionToClosePositionInputActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__takeActionToClosePositionInputRuntimeParamsStruct extends ethereum.Tuple {
  get triggerReturnArr(): Array<
    Fund__takeActionToClosePositionInputRuntimeParamsTriggerReturnArrStruct
  > {
    return this[0].toTupleArray<
      Fund__takeActionToClosePositionInputRuntimeParamsTriggerReturnArrStruct
    >();
  }

  get collaterals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Fund__takeActionToClosePositionInputRuntimeParamsTriggerReturnArrStruct extends ethereum.Tuple {
  get triggerType(): i32 {
    return this[0].toI32();
  }

  get runtimeData(): Bytes {
    return this[1].toBytes();
  }
}

export class Fund__withdrawResultTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__withdrawResult {
  value0: Array<Fund__withdrawResultTokensStruct>;
  value1: Array<BigInt>;

  constructor(
    value0: Array<Fund__withdrawResultTokensStruct>,
    value1: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getTokens(): Array<Fund__withdrawResultTokensStruct> {
    return this.value0;
  }

  getBalances(): Array<BigInt> {
    return this.value1;
  }
}

export class Fund__withdrawManagementFeeResultValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class Fund__withdrawManagementFeeResult {
  value0: Array<Fund__withdrawManagementFeeResultValue0Struct>;
  value1: Array<BigInt>;

  constructor(
    value0: Array<Fund__withdrawManagementFeeResultValue0Struct>,
    value1: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getValue0(): Array<Fund__withdrawManagementFeeResultValue0Struct> {
    return this.value0;
  }

  getValue1(): Array<BigInt> {
    return this.value1;
  }
}

export class Fund extends ethereum.SmartContract {
  static bind(address: Address): Fund {
    return new Fund("Fund", address);
  }

  actionPositionsMap(param0: Bytes, param1: BigInt): Bytes {
    let result = super.call(
      "actionPositionsMap",
      "actionPositionsMap(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBytes();
  }

  try_actionPositionsMap(
    param0: Bytes,
    param1: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "actionPositionsMap",
      "actionPositionsMap(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createRule(
    triggers: Array<Fund__createRuleInputTriggersStruct>,
    actions: Array<Fund__createRuleInputActionsStruct>
  ): Bytes {
    let result = super.call(
      "createRule",
      "createRule((address,uint8,bytes)[],(address,bytes,(uint8,address)[],(uint8,address)[])[]):(bytes32)",
      [
        ethereum.Value.fromTupleArray(triggers),
        ethereum.Value.fromTupleArray(actions)
      ]
    );

    return result[0].toBytes();
  }

  try_createRule(
    triggers: Array<Fund__createRuleInputTriggersStruct>,
    actions: Array<Fund__createRuleInputActionsStruct>
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createRule",
      "createRule((address,uint8,bytes)[],(address,bytes,(uint8,address)[],(uint8,address)[])[]):(bytes32)",
      [
        ethereum.Value.fromTupleArray(triggers),
        ethereum.Value.fromTupleArray(actions)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createRuleToClosePosition(
    action: Fund__createRuleToClosePositionInputActionStruct
  ): Bytes {
    let result = super.call(
      "createRuleToClosePosition",
      "createRuleToClosePosition((address,bytes,(uint8,address)[],(uint8,address)[])):(bytes32)",
      [ethereum.Value.fromTuple(action)]
    );

    return result[0].toBytes();
  }

  try_createRuleToClosePosition(
    action: Fund__createRuleToClosePositionInputActionStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createRuleToClosePosition",
      "createRuleToClosePosition((address,bytes,(uint8,address)[],(uint8,address)[])):(bytes32)",
      [ethereum.Value.fromTuple(action)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  degenMode(): boolean {
    let result = super.call("degenMode", "degenMode():(bool)", []);

    return result[0].toBoolean();
  }

  try_degenMode(): ethereum.CallResult<boolean> {
    let result = super.tryCall("degenMode", "degenMode():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getInputTokens(): Array<Fund__getInputTokensResultValue0Struct> {
    let result = super.call(
      "getInputTokens",
      "getInputTokens():((uint8,address)[])",
      []
    );

    return result[0].toTupleArray<Fund__getInputTokensResultValue0Struct>();
  }

  try_getInputTokens(): ethereum.CallResult<
    Array<Fund__getInputTokensResultValue0Struct>
  > {
    let result = super.tryCall(
      "getInputTokens",
      "getInputTokens():((uint8,address)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Fund__getInputTokensResultValue0Struct>()
    );
  }

  getOutputTokens(): Array<Fund__getOutputTokensResultValue0Struct> {
    let result = super.call(
      "getOutputTokens",
      "getOutputTokens():((uint8,address)[])",
      []
    );

    return result[0].toTupleArray<Fund__getOutputTokensResultValue0Struct>();
  }

  try_getOutputTokens(): ethereum.CallResult<
    Array<Fund__getOutputTokensResultValue0Struct>
  > {
    let result = super.tryCall(
      "getOutputTokens",
      "getOutputTokens():((uint8,address)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Fund__getOutputTokensResultValue0Struct>()
    );
  }

  getStatus(): i32 {
    let result = super.call("getStatus", "getStatus():(uint8)", []);

    return result[0].toI32();
  }

  try_getStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall("getStatus", "getStatus():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  hasPendingPosition(): boolean {
    let result = super.call(
      "hasPendingPosition",
      "hasPendingPosition():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_hasPendingPosition(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasPendingPosition",
      "hasPendingPosition():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  roboCop(): Address {
    let result = super.call("roboCop", "roboCop():(address)", []);

    return result[0].toAddress();
  }

  try_roboCop(): ethereum.CallResult<Address> {
    let result = super.tryCall("roboCop", "roboCop():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  takeAction(
    action: Fund__takeActionInputActionStruct,
    runtimeParams: Fund__takeActionInputRuntimeParamsStruct,
    fees: Array<BigInt>
  ): Fund__takeActionResultValue0Struct {
    let result = super.call(
      "takeAction",
      "takeAction((address,bytes,(uint8,address)[],(uint8,address)[]),((uint8,bytes)[],uint256[]),uint256[]):((uint256[],(bytes32,(uint256,uint256)[],(address,bytes,(uint8,address)[],(uint8,address)[])[])))",
      [
        ethereum.Value.fromTuple(action),
        ethereum.Value.fromTuple(runtimeParams),
        ethereum.Value.fromUnsignedBigIntArray(fees)
      ]
    );

    return changetype<Fund__takeActionResultValue0Struct>(result[0].toTuple());
  }

  try_takeAction(
    action: Fund__takeActionInputActionStruct,
    runtimeParams: Fund__takeActionInputRuntimeParamsStruct,
    fees: Array<BigInt>
  ): ethereum.CallResult<Fund__takeActionResultValue0Struct> {
    let result = super.tryCall(
      "takeAction",
      "takeAction((address,bytes,(uint8,address)[],(uint8,address)[]),((uint8,bytes)[],uint256[]),uint256[]):((uint256[],(bytes32,(uint256,uint256)[],(address,bytes,(uint8,address)[],(uint8,address)[])[])))",
      [
        ethereum.Value.fromTuple(action),
        ethereum.Value.fromTuple(runtimeParams),
        ethereum.Value.fromUnsignedBigIntArray(fees)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Fund__takeActionResultValue0Struct>(value[0].toTuple())
    );
  }

  takeActionToClosePosition(
    action: Fund__takeActionToClosePositionInputActionStruct,
    runtimeParams: Fund__takeActionToClosePositionInputRuntimeParamsStruct,
    fees: Array<BigInt>
  ): Fund__takeActionToClosePositionResultRespStruct {
    let result = super.call(
      "takeActionToClosePosition",
      "takeActionToClosePosition((address,bytes,(uint8,address)[],(uint8,address)[]),((uint8,bytes)[],uint256[]),uint256[]):((uint256[],(bytes32,(uint256,uint256)[],(address,bytes,(uint8,address)[],(uint8,address)[])[])))",
      [
        ethereum.Value.fromTuple(action),
        ethereum.Value.fromTuple(runtimeParams),
        ethereum.Value.fromUnsignedBigIntArray(fees)
      ]
    );

    return changetype<Fund__takeActionToClosePositionResultRespStruct>(
      result[0].toTuple()
    );
  }

  try_takeActionToClosePosition(
    action: Fund__takeActionToClosePositionInputActionStruct,
    runtimeParams: Fund__takeActionToClosePositionInputRuntimeParamsStruct,
    fees: Array<BigInt>
  ): ethereum.CallResult<Fund__takeActionToClosePositionResultRespStruct> {
    let result = super.tryCall(
      "takeActionToClosePosition",
      "takeActionToClosePosition((address,bytes,(uint8,address)[],(uint8,address)[]),((uint8,bytes)[],uint256[]),uint256[]):((uint256[],(bytes32,(uint256,uint256)[],(address,bytes,(uint8,address)[],(uint8,address)[])[])))",
      [
        ethereum.Value.fromTuple(action),
        ethereum.Value.fromTuple(runtimeParams),
        ethereum.Value.fromUnsignedBigIntArray(fees)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Fund__takeActionToClosePositionResultRespStruct>(
        value[0].toTuple()
      )
    );
  }

  withdraw(subscriptionIdx: BigInt): Fund__withdrawResult {
    let result = super.call(
      "withdraw",
      "withdraw(uint256):((uint8,address)[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(subscriptionIdx)]
    );

    return new Fund__withdrawResult(
      result[0].toTupleArray<Fund__withdrawResultTokensStruct>(),
      result[1].toBigIntArray()
    );
  }

  try_withdraw(
    subscriptionIdx: BigInt
  ): ethereum.CallResult<Fund__withdrawResult> {
    let result = super.tryCall(
      "withdraw",
      "withdraw(uint256):((uint8,address)[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(subscriptionIdx)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fund__withdrawResult(
        value[0].toTupleArray<Fund__withdrawResultTokensStruct>(),
        value[1].toBigIntArray()
      )
    );
  }

  withdrawManagementFee(): Fund__withdrawManagementFeeResult {
    let result = super.call(
      "withdrawManagementFee",
      "withdrawManagementFee():((uint8,address)[],uint256[])",
      []
    );

    return new Fund__withdrawManagementFeeResult(
      result[0].toTupleArray<Fund__withdrawManagementFeeResultValue0Struct>(),
      result[1].toBigIntArray()
    );
  }

  try_withdrawManagementFee(): ethereum.CallResult<
    Fund__withdrawManagementFeeResult
  > {
    let result = super.tryCall(
      "withdrawManagementFee",
      "withdrawManagementFee():((uint8,address)[],uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fund__withdrawManagementFeeResult(
        value[0].toTupleArray<Fund__withdrawManagementFeeResultValue0Struct>(),
        value[1].toBigIntArray()
      )
    );
  }

  wlService(): Address {
    let result = super.call("wlService", "wlService():(address)", []);

    return result[0].toAddress();
  }

  try_wlService(): ethereum.CallResult<Address> {
    let result = super.tryCall("wlService", "wlService():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateRuleCall extends ethereum.Call {
  get inputs(): ActivateRuleCall__Inputs {
    return new ActivateRuleCall__Inputs(this);
  }

  get outputs(): ActivateRuleCall__Outputs {
    return new ActivateRuleCall__Outputs(this);
  }
}

export class ActivateRuleCall__Inputs {
  _call: ActivateRuleCall;

  constructor(call: ActivateRuleCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ActivateRuleCall__Outputs {
  _call: ActivateRuleCall;

  constructor(call: ActivateRuleCall) {
    this._call = call;
  }
}

export class AddRuleCollateralCall extends ethereum.Call {
  get inputs(): AddRuleCollateralCall__Inputs {
    return new AddRuleCollateralCall__Inputs(this);
  }

  get outputs(): AddRuleCollateralCall__Outputs {
    return new AddRuleCollateralCall__Outputs(this);
  }
}

export class AddRuleCollateralCall__Inputs {
  _call: AddRuleCollateralCall;

  constructor(call: AddRuleCollateralCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get collateralTokens(): Array<AddRuleCollateralCallCollateralTokensStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      AddRuleCollateralCallCollateralTokensStruct
    >();
  }

  get collaterals(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get fees(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class AddRuleCollateralCall__Outputs {
  _call: AddRuleCollateralCall;

  constructor(call: AddRuleCollateralCall) {
    this._call = call;
  }
}

export class AddRuleCollateralCallCollateralTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class CancelRuleCall extends ethereum.Call {
  get inputs(): CancelRuleCall__Inputs {
    return new CancelRuleCall__Inputs(this);
  }

  get outputs(): CancelRuleCall__Outputs {
    return new CancelRuleCall__Outputs(this);
  }
}

export class CancelRuleCall__Inputs {
  _call: CancelRuleCall;

  constructor(call: CancelRuleCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelRuleCall__Outputs {
  _call: CancelRuleCall;

  constructor(call: CancelRuleCall) {
    this._call = call;
  }
}

export class CloseFundCall extends ethereum.Call {
  get inputs(): CloseFundCall__Inputs {
    return new CloseFundCall__Inputs(this);
  }

  get outputs(): CloseFundCall__Outputs {
    return new CloseFundCall__Outputs(this);
  }
}

export class CloseFundCall__Inputs {
  _call: CloseFundCall;

  constructor(call: CloseFundCall) {
    this._call = call;
  }
}

export class CloseFundCall__Outputs {
  _call: CloseFundCall;

  constructor(call: CloseFundCall) {
    this._call = call;
  }
}

export class CreateRuleCall extends ethereum.Call {
  get inputs(): CreateRuleCall__Inputs {
    return new CreateRuleCall__Inputs(this);
  }

  get outputs(): CreateRuleCall__Outputs {
    return new CreateRuleCall__Outputs(this);
  }
}

export class CreateRuleCall__Inputs {
  _call: CreateRuleCall;

  constructor(call: CreateRuleCall) {
    this._call = call;
  }

  get triggers(): Array<CreateRuleCallTriggersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      CreateRuleCallTriggersStruct
    >();
  }

  get actions(): Array<CreateRuleCallActionsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      CreateRuleCallActionsStruct
    >();
  }
}

export class CreateRuleCall__Outputs {
  _call: CreateRuleCall;

  constructor(call: CreateRuleCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateRuleCallTriggersStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get triggerType(): i32 {
    return this[1].toI32();
  }

  get createTimeParams(): Bytes {
    return this[2].toBytes();
  }
}

export class CreateRuleCallActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<CreateRuleCallActionsInputTokensStruct> {
    return this[2].toTupleArray<CreateRuleCallActionsInputTokensStruct>();
  }

  get outputTokens(): Array<CreateRuleCallActionsOutputTokensStruct> {
    return this[3].toTupleArray<CreateRuleCallActionsOutputTokensStruct>();
  }
}

export class CreateRuleCallActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class CreateRuleCallActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class CreateRuleToClosePositionCall extends ethereum.Call {
  get inputs(): CreateRuleToClosePositionCall__Inputs {
    return new CreateRuleToClosePositionCall__Inputs(this);
  }

  get outputs(): CreateRuleToClosePositionCall__Outputs {
    return new CreateRuleToClosePositionCall__Outputs(this);
  }
}

export class CreateRuleToClosePositionCall__Inputs {
  _call: CreateRuleToClosePositionCall;

  constructor(call: CreateRuleToClosePositionCall) {
    this._call = call;
  }

  get action(): CreateRuleToClosePositionCallActionStruct {
    return changetype<CreateRuleToClosePositionCallActionStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateRuleToClosePositionCall__Outputs {
  _call: CreateRuleToClosePositionCall;

  constructor(call: CreateRuleToClosePositionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateRuleToClosePositionCallActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    CreateRuleToClosePositionCallActionInputTokensStruct
  > {
    return this[2].toTupleArray<
      CreateRuleToClosePositionCallActionInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    CreateRuleToClosePositionCallActionOutputTokensStruct
  > {
    return this[3].toTupleArray<
      CreateRuleToClosePositionCallActionOutputTokensStruct
    >();
  }
}

export class CreateRuleToClosePositionCallActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class CreateRuleToClosePositionCallActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class DeactivateRuleCall extends ethereum.Call {
  get inputs(): DeactivateRuleCall__Inputs {
    return new DeactivateRuleCall__Inputs(this);
  }

  get outputs(): DeactivateRuleCall__Outputs {
    return new DeactivateRuleCall__Outputs(this);
  }
}

export class DeactivateRuleCall__Inputs {
  _call: DeactivateRuleCall;

  constructor(call: DeactivateRuleCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeactivateRuleCall__Outputs {
  _call: DeactivateRuleCall;

  constructor(call: DeactivateRuleCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get collateralToken(): DepositCallCollateralTokenStruct {
    return changetype<DepositCallCollateralTokenStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get amountSent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get idx(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositCallCollateralTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class IncreaseRuleIncentiveCall extends ethereum.Call {
  get inputs(): IncreaseRuleIncentiveCall__Inputs {
    return new IncreaseRuleIncentiveCall__Inputs(this);
  }

  get outputs(): IncreaseRuleIncentiveCall__Outputs {
    return new IncreaseRuleIncentiveCall__Outputs(this);
  }
}

export class IncreaseRuleIncentiveCall__Inputs {
  _call: IncreaseRuleIncentiveCall;

  constructor(call: IncreaseRuleIncentiveCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseRuleIncentiveCall__Outputs {
  _call: IncreaseRuleIncentiveCall;

  constructor(call: IncreaseRuleIncentiveCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _manager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _constraints(): InitializeCall_constraintsStruct {
    return changetype<InitializeCall_constraintsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _feeParams(): InitializeCall_feeParamsStruct {
    return changetype<InitializeCall_feeParamsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get _wlServiceAddr(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _triggerWhitelistHash(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _actionWhitelistHash(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get roboCopImplementationAddr(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _declaredTokenAddrs(): Array<Address> {
    return this._call.inputValues[8].value.toAddressArray();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall_constraintsStruct extends ethereum.Tuple {
  get minCollateralPerSub(): BigInt {
    return this[0].toBigInt();
  }

  get maxCollateralPerSub(): BigInt {
    return this[1].toBigInt();
  }

  get minCollateralTotal(): BigInt {
    return this[2].toBigInt();
  }

  get maxCollateralTotal(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get lockin(): BigInt {
    return this[5].toBigInt();
  }

  get allowedDepositToken(): InitializeCall_constraintsAllowedDepositTokenStruct {
    return changetype<InitializeCall_constraintsAllowedDepositTokenStruct>(
      this[6].toTuple()
    );
  }
}

export class InitializeCall_constraintsAllowedDepositTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class InitializeCall_feeParamsStruct extends ethereum.Tuple {
  get platformFeeWallet(): Address {
    return this[0].toAddress();
  }

  get subscriberToPlatformFeePercentage(): BigInt {
    return this[1].toBigInt();
  }

  get managerToPlatformFeePercentage(): BigInt {
    return this[2].toBigInt();
  }

  get subscriberToManagerFeePercentage(): BigInt {
    return this[3].toBigInt();
  }
}

export class RedeemRuleOutputCall extends ethereum.Call {
  get inputs(): RedeemRuleOutputCall__Inputs {
    return new RedeemRuleOutputCall__Inputs(this);
  }

  get outputs(): RedeemRuleOutputCall__Outputs {
    return new RedeemRuleOutputCall__Outputs(this);
  }
}

export class RedeemRuleOutputCall__Inputs {
  _call: RedeemRuleOutputCall;

  constructor(call: RedeemRuleOutputCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemRuleOutputCall__Outputs {
  _call: RedeemRuleOutputCall;

  constructor(call: RedeemRuleOutputCall) {
    this._call = call;
  }
}

export class ReduceRuleCollateralCall extends ethereum.Call {
  get inputs(): ReduceRuleCollateralCall__Inputs {
    return new ReduceRuleCollateralCall__Inputs(this);
  }

  get outputs(): ReduceRuleCollateralCall__Outputs {
    return new ReduceRuleCollateralCall__Outputs(this);
  }
}

export class ReduceRuleCollateralCall__Inputs {
  _call: ReduceRuleCollateralCall;

  constructor(call: ReduceRuleCollateralCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get collaterals(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ReduceRuleCollateralCall__Outputs {
  _call: ReduceRuleCollateralCall;

  constructor(call: ReduceRuleCollateralCall) {
    this._call = call;
  }
}

export class TakeActionCall extends ethereum.Call {
  get inputs(): TakeActionCall__Inputs {
    return new TakeActionCall__Inputs(this);
  }

  get outputs(): TakeActionCall__Outputs {
    return new TakeActionCall__Outputs(this);
  }
}

export class TakeActionCall__Inputs {
  _call: TakeActionCall;

  constructor(call: TakeActionCall) {
    this._call = call;
  }

  get action(): TakeActionCallActionStruct {
    return changetype<TakeActionCallActionStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get runtimeParams(): TakeActionCallRuntimeParamsStruct {
    return changetype<TakeActionCallRuntimeParamsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get fees(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class TakeActionCall__Outputs {
  _call: TakeActionCall;

  constructor(call: TakeActionCall) {
    this._call = call;
  }

  get value0(): TakeActionCallValue0Struct {
    return changetype<TakeActionCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class TakeActionCallActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<TakeActionCallActionInputTokensStruct> {
    return this[2].toTupleArray<TakeActionCallActionInputTokensStruct>();
  }

  get outputTokens(): Array<TakeActionCallActionOutputTokensStruct> {
    return this[3].toTupleArray<TakeActionCallActionOutputTokensStruct>();
  }
}

export class TakeActionCallActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionCallActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionCallRuntimeParamsStruct extends ethereum.Tuple {
  get triggerReturnArr(): Array<
    TakeActionCallRuntimeParamsTriggerReturnArrStruct
  > {
    return this[0].toTupleArray<
      TakeActionCallRuntimeParamsTriggerReturnArrStruct
    >();
  }

  get collaterals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class TakeActionCallRuntimeParamsTriggerReturnArrStruct extends ethereum.Tuple {
  get triggerType(): i32 {
    return this[0].toI32();
  }

  get runtimeData(): Bytes {
    return this[1].toBytes();
  }
}

export class TakeActionCallValue0Struct extends ethereum.Tuple {
  get tokenOutputs(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get position(): TakeActionCallValue0PositionStruct {
    return changetype<TakeActionCallValue0PositionStruct>(this[1].toTuple());
  }
}

export class TakeActionCallValue0PositionStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get actionConstraints(): Array<
    TakeActionCallValue0PositionActionConstraintsStruct
  > {
    return this[1].toTupleArray<
      TakeActionCallValue0PositionActionConstraintsStruct
    >();
  }

  get nextActions(): Array<TakeActionCallValue0PositionNextActionsStruct> {
    return this[2].toTupleArray<
      TakeActionCallValue0PositionNextActionsStruct
    >();
  }
}

export class TakeActionCallValue0PositionActionConstraintsStruct extends ethereum.Tuple {
  get expiry(): BigInt {
    return this[0].toBigInt();
  }

  get activation(): BigInt {
    return this[1].toBigInt();
  }
}

export class TakeActionCallValue0PositionNextActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    TakeActionCallValue0PositionNextActionsInputTokensStruct
  > {
    return this[2].toTupleArray<
      TakeActionCallValue0PositionNextActionsInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    TakeActionCallValue0PositionNextActionsOutputTokensStruct
  > {
    return this[3].toTupleArray<
      TakeActionCallValue0PositionNextActionsOutputTokensStruct
    >();
  }
}

export class TakeActionCallValue0PositionNextActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionCallValue0PositionNextActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionToClosePositionCall extends ethereum.Call {
  get inputs(): TakeActionToClosePositionCall__Inputs {
    return new TakeActionToClosePositionCall__Inputs(this);
  }

  get outputs(): TakeActionToClosePositionCall__Outputs {
    return new TakeActionToClosePositionCall__Outputs(this);
  }
}

export class TakeActionToClosePositionCall__Inputs {
  _call: TakeActionToClosePositionCall;

  constructor(call: TakeActionToClosePositionCall) {
    this._call = call;
  }

  get action(): TakeActionToClosePositionCallActionStruct {
    return changetype<TakeActionToClosePositionCallActionStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get runtimeParams(): TakeActionToClosePositionCallRuntimeParamsStruct {
    return changetype<TakeActionToClosePositionCallRuntimeParamsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get fees(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class TakeActionToClosePositionCall__Outputs {
  _call: TakeActionToClosePositionCall;

  constructor(call: TakeActionToClosePositionCall) {
    this._call = call;
  }

  get resp(): TakeActionToClosePositionCallRespStruct {
    return changetype<TakeActionToClosePositionCallRespStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class TakeActionToClosePositionCallActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    TakeActionToClosePositionCallActionInputTokensStruct
  > {
    return this[2].toTupleArray<
      TakeActionToClosePositionCallActionInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    TakeActionToClosePositionCallActionOutputTokensStruct
  > {
    return this[3].toTupleArray<
      TakeActionToClosePositionCallActionOutputTokensStruct
    >();
  }
}

export class TakeActionToClosePositionCallActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionToClosePositionCallActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionToClosePositionCallRuntimeParamsStruct extends ethereum.Tuple {
  get triggerReturnArr(): Array<
    TakeActionToClosePositionCallRuntimeParamsTriggerReturnArrStruct
  > {
    return this[0].toTupleArray<
      TakeActionToClosePositionCallRuntimeParamsTriggerReturnArrStruct
    >();
  }

  get collaterals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class TakeActionToClosePositionCallRuntimeParamsTriggerReturnArrStruct extends ethereum.Tuple {
  get triggerType(): i32 {
    return this[0].toI32();
  }

  get runtimeData(): Bytes {
    return this[1].toBytes();
  }
}

export class TakeActionToClosePositionCallRespStruct extends ethereum.Tuple {
  get tokenOutputs(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get position(): TakeActionToClosePositionCallRespPositionStruct {
    return changetype<TakeActionToClosePositionCallRespPositionStruct>(
      this[1].toTuple()
    );
  }
}

export class TakeActionToClosePositionCallRespPositionStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get actionConstraints(): Array<
    TakeActionToClosePositionCallRespPositionActionConstraintsStruct
  > {
    return this[1].toTupleArray<
      TakeActionToClosePositionCallRespPositionActionConstraintsStruct
    >();
  }

  get nextActions(): Array<
    TakeActionToClosePositionCallRespPositionNextActionsStruct
  > {
    return this[2].toTupleArray<
      TakeActionToClosePositionCallRespPositionNextActionsStruct
    >();
  }
}

export class TakeActionToClosePositionCallRespPositionActionConstraintsStruct extends ethereum.Tuple {
  get expiry(): BigInt {
    return this[0].toBigInt();
  }

  get activation(): BigInt {
    return this[1].toBigInt();
  }
}

export class TakeActionToClosePositionCallRespPositionNextActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    TakeActionToClosePositionCallRespPositionNextActionsInputTokensStruct
  > {
    return this[2].toTupleArray<
      TakeActionToClosePositionCallRespPositionNextActionsInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    TakeActionToClosePositionCallRespPositionNextActionsOutputTokensStruct
  > {
    return this[3].toTupleArray<
      TakeActionToClosePositionCallRespPositionNextActionsOutputTokensStruct
    >();
  }
}

export class TakeActionToClosePositionCallRespPositionNextActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class TakeActionToClosePositionCallRespPositionNextActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get subscriptionIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get tokens(): Array<WithdrawCallTokensStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      WithdrawCallTokensStruct
    >();
  }

  get balances(): Array<BigInt> {
    return this._call.outputValues[1].value.toBigIntArray();
  }
}

export class WithdrawCallTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class WithdrawManagementFeeCall extends ethereum.Call {
  get inputs(): WithdrawManagementFeeCall__Inputs {
    return new WithdrawManagementFeeCall__Inputs(this);
  }

  get outputs(): WithdrawManagementFeeCall__Outputs {
    return new WithdrawManagementFeeCall__Outputs(this);
  }
}

export class WithdrawManagementFeeCall__Inputs {
  _call: WithdrawManagementFeeCall;

  constructor(call: WithdrawManagementFeeCall) {
    this._call = call;
  }
}

export class WithdrawManagementFeeCall__Outputs {
  _call: WithdrawManagementFeeCall;

  constructor(call: WithdrawManagementFeeCall) {
    this._call = call;
  }

  get value0(): Array<WithdrawManagementFeeCallValue0Struct> {
    return this._call.outputValues[0].value.toTupleArray<
      WithdrawManagementFeeCallValue0Struct
    >();
  }

  get value1(): Array<BigInt> {
    return this._call.outputValues[1].value.toBigIntArray();
  }
}

export class WithdrawManagementFeeCallValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class WithdrawRuleIncentiveCall extends ethereum.Call {
  get inputs(): WithdrawRuleIncentiveCall__Inputs {
    return new WithdrawRuleIncentiveCall__Inputs(this);
  }

  get outputs(): WithdrawRuleIncentiveCall__Outputs {
    return new WithdrawRuleIncentiveCall__Outputs(this);
  }
}

export class WithdrawRuleIncentiveCall__Inputs {
  _call: WithdrawRuleIncentiveCall;

  constructor(call: WithdrawRuleIncentiveCall) {
    this._call = call;
  }

  get openRuleIdx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawRuleIncentiveCall__Outputs {
  _call: WithdrawRuleIncentiveCall;

  constructor(call: WithdrawRuleIncentiveCall) {
    this._call = call;
  }
}
